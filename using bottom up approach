class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.size();
        int dp[n+1][n+1];
        memset(dp, 0, sizeof(dp));
        for(int i=0; i<n; i++)
            dp[i][i]=1;
        int start =0;
        int maxlength =1;
        for(int i=0; i<n-1; i++){
            if(s[i] == s[i+1]){
                dp[i][i+1] =1;
                start =i;
                maxlength =2;
            }
        }
        for(int i=3; i<=n; i++){
            for(int j=0; j<n-i+1; j++){
                int k = i+j-1;
                if(dp[j+1][k-1] && s[j] == s[k]){
                    dp[j][k] =1;
                    if(i> maxlength){
                        start = j;
                        maxlength =i;
                    }
                }
            }
        }
        string str = s.substr(start, maxlength);
        return str;
    }
};
